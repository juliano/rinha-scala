version: "3.5"

services:
  db: # Banco de dados
    image: postgres
    hostname: db
    environment:
      - POSTGRES_DB=rinhadb
      - POSTGRES_USER=rinha
      - POSTGRES_PASSWORD=r1nh4
    ports:
      - "5432:5432"
    volumes:
      - ./src/main/resources/sql/create_table.sql:/docker-entrypoint-initdb.d/create_table.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rinha -d rinhadb"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "0.35GB"

  api1: &api
    build: .
    hostname: api1
    environment:
      DB_HOST: db
      REDIS_HOST: redis
      HTTP_PORT: 8080
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "1.1GB"

  api2:
    <<: *api
    hostname: api2
    environment:
      DB_HOST: db
      REDIS_HOST: redis
      HTTP_PORT: 8081
    ports:
      - "8081:8081"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "0.3GB"

  redis:
    image: redis:latest
    command: redis-server --save "" --appendonly no
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.15GB'